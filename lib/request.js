// Generated by IcedCoffeeScript 1.7.1-b
(function() {
  var athrow, base, core, iced, make_esc, mime_types, request, __iced_k, __iced_k_noop;

  iced = require('iced-coffee-script').iced;
  __iced_k = __iced_k_noop = function() {};

  base = require('request');

  make_esc = require('iced-error').make_esc;

  athrow = require('iced-utils').util.athrow;

  core = require('keybase-bjson-core');

  mime_types = core.mime_types;

  exports.request = request = function(opts, cb) {
    var body, ct, decode, err, esc, inbody, obj, resp, ___iced_passed_deferral, __iced_deferrals, __iced_k;
    __iced_k = __iced_k_noop;
    ___iced_passed_deferral = iced.findDeferral(arguments);
    err = null;
    decode = false;
    esc = make_esc(cb, "request");
    (function(_this) {
      return (function(__iced_k) {
        var _ref, _ref1;
        if ((obj = (_ref = opts.arg) != null ? _ref.data : void 0) != null) {
          _ref1 = core.to_content_type_and_body({
            encoding: opts != null ? opts.arg.encoding : void 0,
            obj: obj
          }), err = _ref1[0], ct = _ref1[1], inbody = _ref1[2];
          (function(__iced_k) {
            if (err != null) {
              (function(__iced_k) {
                __iced_deferrals = new iced.Deferrals(__iced_k, {
                  parent: ___iced_passed_deferral,
                  filename: "/home/max/src/keybase/node-bjson-client/src/request.iced"
                });
                athrow(err, esc(__iced_deferrals.defer({
                  lineno: 21
                })));
                __iced_deferrals._fulfill();
              })(__iced_k);
            } else {
              return __iced_k();
            }
          })(function() {
            opts.encoding = null;
            opts.headers || (opts.headers = {});
            opts.headers['content-type'] = ct;
            opts.headers['accept'] = core.accept.join(', ');
            return __iced_k(opts.body = inbody);
          });
        } else {
          return __iced_k();
        }
      });
    })(this)((function(_this) {
      return function() {
        (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/home/max/src/keybase/node-bjson-client/src/request.iced"
          });
          base(opts, esc(__iced_deferrals.defer({
            assign_fn: (function() {
              return function() {
                resp = arguments[0];
                return body = arguments[1];
              };
            })(),
            lineno: 28
          })));
          __iced_deferrals._fulfill();
        })(function() {
          var _ref, _ref1;
          if ((ct = (_ref = resp.headers['content-type']) != null ? _ref.split("; ") : void 0) == null) {

          } else {
            _ref1 = core.from_content_type_and_body({
              content_type: ct[0],
              body: body
            }), err = _ref1[0], body = _ref1[1];
          }
          return cb(err, resp, body);
        });
      };
    })(this));
  };

}).call(this);
